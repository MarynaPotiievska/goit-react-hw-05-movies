{"version":3,"file":"static/js/415.7e9fc7e2.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,WAAOC,GAAP,uFACZF,EAAAA,EAAAA,IAAU,eAAgB,CAC5CG,OAAQ,CACPC,QAASL,EACTM,MAAOH,KAJsB,cACzBI,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,sDAYhBC,EAAmB,mCAAG,oGACfT,EAAAA,EAAAA,IAAU,qBAAsB,CAClDG,OAAQ,CACPC,QAASL,KAHuB,cAC5BO,EAD4B,yBAM3BA,EAAKC,KAAKC,SANiB,2CAAH,qDAUnBE,EAAiB,mCAAG,WAAOC,GAAP,uFACbX,EAAAA,EAAAA,IAAA,gBAAmBW,GAAM,CAC3CR,OAAQ,CACPC,QAASL,KAHqB,cAC1BO,EAD0B,yBAMzBA,EAAKC,MANoB,2CAAH,sDAUjBK,EAAc,mCAAG,WAAOC,GAAP,uFACVb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAsC,CACxDV,OAAQ,CACPC,QAASL,KAHkB,cACvBO,EADuB,yBAMtBA,EAAKC,KAAKO,MANY,2CAAH,sDAUdC,EAAiB,mCAAG,WAAOF,GAAP,uFACbb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAsC,CACxDV,OAAQ,CACPC,QAASL,KAHqB,cAC1BO,EAD0B,yBAMzBA,EAAKC,KAAKC,SANe,2CAAH,qD,+FC5CjBQ,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oG,SC2BrB,EA1BkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOrB,EAAV,EAAUA,KAAMS,EAAhB,EAAgBA,GAAhB,OACV,yBACE,SAACK,EAAD,CAAUQ,GAAE,kBAAab,GAAMc,MAAO,CAAEC,KAAMN,GAA9C,SACGG,GAASrB,KAFLS,EADC,KASjB,C,qEChBYgB,E,OAAYV,EAAAA,GAAH,4G,SCStB,EARc,SAAC,GAAe,IAAbM,EAAY,EAAZA,MACf,OAAO,SAACI,EAAD,UAAYJ,GACpB,C,iHC8BD,UA9Ba,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBzB,EAAAA,EAAAA,MAHzB,OAGUU,EAHV,OAIIW,EAAkBX,GAJtB,gDAMIa,EAAS,mDANb,yBAQIE,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdE,EACD,GAAE,KAGD,6BACE,SAAC,IAAD,CAAOb,MAAM,mBACZM,EAAeQ,OAAS,IAAK,SAAC,IAAD,CAAWlB,OAAQU,IAChDI,IAAa,wCACbF,IAAS,yBAAMA,MAGrB,C","sources":["api.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '2390bc0c07f3ecc54a6e60472acdfb3a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMovieByName = async (name) => {\n\tconst resp = await axios.get('search/movie', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: name\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\n\nexport const fetchTrendingMovies = async () => {\n\tconst resp = await axios.get('trending/movie/day', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\nexport const fetchMovieDetails = async (id) => {\n\tconst resp = await axios.get(`movie/${id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data;\n\t// resp.data - object\n};\n\nexport const fetchMovieCast = async (movieId) => {\n\tconst resp = await axios.get(`movie/${movieId}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.cast;\n\t// resp.data.results - array of objects\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n\tconst resp = await axios.get(`movie/${movieId}/reviews`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmLink = styled(Link)`\n  display: block;\n  padding: 4px;\n  font-weight: 500;\n  color: #000000;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { FilmLink } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, name, id }) => (\n        <li key={id}>\n          <FilmLink to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </FilmLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  font-weight: bold;\n  font-size: 24px;\n  color: #b81a2f;\n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from './Title.styled';\n\nconst Title = ({ title }) => {\n  return <PageTitle>{title}</PageTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import { fetchTrendingMovies } from 'api';\nimport Title from 'components/Title';\nimport { useEffect, useState } from 'react';\nimport MovieList from 'components/MovieList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function gettingTrendingMovies() {\n      try {\n        setIsLoading(true);\n        const movies = await fetchTrendingMovies();\n        setTrendingMovies(movies);\n      } catch (error) {\n        setError('Sorry, something went wrong. Please, try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    gettingTrendingMovies();\n  }, []);\n\n  return (\n    <main>\n      <Title title=\"Trending today\" />\n      {trendingMovies.length > 0 && <MovieList movies={trendingMovies} />}\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","fetchMovieByName","name","params","api_key","query","resp","data","results","fetchTrendingMovies","fetchMovieDetails","id","fetchMovieCast","movieId","cast","fetchMovieReviews","FilmLink","styled","Link","movies","location","useLocation","map","title","to","state","from","PageTitle","useState","trendingMovies","setTrendingMovies","error","setError","isLoading","setIsLoading","useEffect","gettingTrendingMovies","length"],"sourceRoot":""}