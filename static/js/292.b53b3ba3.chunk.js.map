{"version":3,"file":"static/js/292.b53b3ba3.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,WAAOC,GAAP,uFACZF,EAAAA,EAAAA,IAAU,eAAgB,CAC5CG,OAAQ,CACPC,QAASL,EACTM,MAAOH,KAJsB,cACzBI,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,sDAYhBC,EAAmB,mCAAG,oGACfT,EAAAA,EAAAA,IAAU,qBAAsB,CAClDG,OAAQ,CACPC,QAASL,KAHuB,cAC5BO,EAD4B,yBAM3BA,EAAKC,KAAKC,SANiB,2CAAH,qDAUnBE,EAAiB,mCAAG,WAAOC,GAAP,uFACbX,EAAAA,EAAAA,IAAA,gBAAmBW,GAAM,CAC3CR,OAAQ,CACPC,QAASL,KAHqB,cAC1BO,EAD0B,yBAMzBA,EAAKC,MANoB,2CAAH,sDAUjBK,EAAc,mCAAG,WAAOC,GAAP,uFACVb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAsC,CACxDV,OAAQ,CACPC,QAASL,KAHkB,cACvBO,EADuB,yBAMtBA,EAAKC,KAAKO,MANY,2CAAH,sDAUdC,EAAiB,mCAAG,WAAOF,GAAP,uFACbb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAsC,CACxDV,OAAQ,CACPC,QAASL,KAHqB,cAC1BO,EAD0B,yBAMzBA,EAAKC,KAAKC,SANe,2CAAH,qD,qEC7CjBQ,E,OAAYC,EAAAA,GAAH,4G,SCStB,EARc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OAAO,SAACF,EAAD,UAAYE,GACpB,C,kLCHYC,EAAeF,EAAAA,EAAAA,QAAH,gFAMZG,EAASH,EAAAA,EAAAA,IAAH,8EAMNI,EAAgBJ,EAAAA,EAAAA,EAAH,qEAKbK,EAAeL,EAAAA,EAAAA,IAAH,oEAKZM,EAAiBN,EAAAA,EAAAA,GAAH,yF,SCqC3B,EAlDkB,SAAC,GAAsB,IAApBO,EAAmB,EAAnBA,aACXN,EACNM,EADMN,MAAOO,EACbD,EADaC,aAAcC,EAC3BF,EAD2BE,YAAaC,EACxCH,EADwCG,aAAcC,EACtDJ,EADsDI,SAAUC,EAChEL,EADgEK,OAG5DC,EADc,IAAIC,KAAKN,GACGO,cAC1BC,EAAYJ,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMjC,IAAV,IAAgBkC,KAAK,KAEvD,OACE,UAACjB,EAAD,YACE,SAACC,EAAD,CACEiB,IACEX,EAAW,8CACgCA,GACvC,yEAENY,IAAKpB,KAEP,4BACE,SAACqB,EAAA,EAAD,CAAOrB,MAAK,UAAKA,EAAL,aAAeY,EAAf,QACZ,SAACT,EAAD,gCACkBmB,KAAKC,MAAqB,GAAfd,GAD7B,QAGA,UAACL,EAAD,YACE,SAACC,EAAD,wBACA,uBAAIK,QAEN,UAACN,EAAD,YACE,SAACC,EAAD,sBACA,uBAAIU,YAKb,E,iBCzCYS,GAAazB,EAAAA,EAAAA,GAAO0B,EAAAA,GAAP1B,CAAH,uOCcvB,EAbiB,SAAC,GAAkB,IAAhB2B,EAAe,EAAfA,SAClB,OACE,UAACF,EAAD,CAAYG,GAAID,EAAhB,WACE,SAAC,MAAD,KACA,wCAGL,ECRYE,EAAkB7B,EAAAA,EAAAA,IAAH,0IAMf8B,EAAoB9B,EAAAA,EAAAA,GAAH,oEAKjByB,GAAazB,EAAAA,EAAAA,GAAO+B,EAAAA,GAAP/B,CAAH,uPCUvB,EAjBqB,SAAC,GAAkB,IAAhB2B,EAAe,EAAfA,SACtB,OACE,UAACE,EAAD,YACE,SAACC,EAAD,sCACA,SAAC,EAAD,CAAYF,GAAG,OAAOI,MAAO,CAAEC,KAAMN,GAArC,mBAGA,SAAC,EAAD,CAAYC,GAAG,UAAUI,MAAO,CAAEC,KAAMN,GAAxC,uBAKL,EC2BD,EAtCqB,WAAO,IAAD,IACzB,GAAwCO,EAAAA,EAAAA,UAAS,MAAjD,eAAO3B,EAAP,KAAqB4B,EAArB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAEQ3C,GAAY4C,EAAAA,EAAAA,MAAZ5C,QAEF6C,EAAY,qBADDC,EAAAA,EAAAA,MACaV,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiB7C,OAfAU,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIJ,GAAa,GAFjB,UAGuB9C,EAAAA,EAAAA,IAAkBG,GAHzC,OAGUP,EAHV,OAII8C,EAAgB9C,GAJpB,gDAMIgD,EAAS,mDANb,yBAQIE,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,CAAChD,KAGF,6BACE,SAAC,EAAD,CAAU+B,SAAUc,IACnBlC,IAAgB,SAAC,EAAD,CAAWA,aAAcA,IACzC+B,IAAa,wCACbF,IAAS,yBAAMA,KAChB,SAAC,EAAD,CAAcT,SAAUc,KACxB,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api.js","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/AddInfoLinks/AddInfoLinks.styled.jsx","components/AddInfoLinks/AddInfoLinks.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '2390bc0c07f3ecc54a6e60472acdfb3a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMovieByName = async (name) => {\n\tconst resp = await axios.get('search/movie', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: name\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\n\nexport const fetchTrendingMovies = async () => {\n\tconst resp = await axios.get('trending/movie/day', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\nexport const fetchMovieDetails = async (id) => {\n\tconst resp = await axios.get(`movie/${id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data;\n\t// resp.data - object\n};\n\nexport const fetchMovieCast = async (movieId) => {\n\tconst resp = await axios.get(`movie/${movieId}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.cast;\n\t// resp.data.results - array of objects\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n\tconst resp = await axios.get(`movie/${movieId}/reviews`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\n\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  font-weight: bold;\n  font-size: 24px;\n  color: #b81a2f;\n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from './Title.styled';\n\nconst Title = ({ title }) => {\n  return <PageTitle>{title}</PageTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import styled from '@emotion/styled';\n\nexport const MovieCardBox = styled.section`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 32px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 200px;\n  height: 300px;\n`;\n\nexport const MovieScoreBox = styled.p`\n  padding-top: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const MovieInfoBox = styled.div`\n  padding-top: 8px;\n  margin-bottom: 8px;\n`;\n\nexport const MovieInfoTitle = styled.h2`\n  margin-bottom: 4px;\n  font-weight: bold;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport Title from 'components/Title';\nimport {\n  MovieCardBox,\n  MovieInfoBox,\n  MovieInfoTitle,\n  MovieScoreBox,\n  Poster,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ movieDetails }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movieDetails;\n  const releaseDate = new Date(release_date);\n  const releaseYear = releaseDate.getFullYear();\n  const genresArr = genres.map(genre => genre.name).join(' ');\n\n  return (\n    <MovieCardBox>\n      <Poster\n        src={\n          poster_path\n            ? `https://www.themoviedb.org/t/p/w500/${poster_path}`\n            : 'https://via.placeholder.com/300x200.jpg/A3A3A3?Text=There+is+no+poster'\n        }\n        alt={title}\n      />\n      <div>\n        <Title title={`${title} (${releaseYear})`} />\n        <MovieScoreBox>\n          {`User Score: ${Math.round(vote_average * 10)}%`}\n        </MovieScoreBox>\n        <MovieInfoBox>\n          <MovieInfoTitle>Overview</MovieInfoTitle>\n          <p>{overview}</p>\n        </MovieInfoBox>\n        <MovieInfoBox>\n          <MovieInfoTitle>Genres</MovieInfoTitle>\n          <p>{genresArr}</p>\n        </MovieInfoBox>\n      </div>\n    </MovieCardBox>\n  );\n};\n\nMovieCard.propTypes = {\n  movieDetails: PropTypes.shape({\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: #000000;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 12px;\n\n  :hover {\n    color: #b81a2f;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HiOutlineArrowNarrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ location }) => {\n  return (\n    <StyledLink to={location}>\n      <HiOutlineArrowNarrowLeft />\n      <span>Go back</span>\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default BackLink;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const AddInfoLinksBox = styled.div`\n  padding: 8px;\n  border-top: 1px solid rgb(78, 76, 76, 0.5);\n  border-bottom: 1px solid rgb(78, 76, 76, 0.5);\n`;\n\nexport const AddInfoLinksTitle = styled.h3`\n  font-weight: 600;\n  margin-bottom: 8px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 12px;\n  color: #000000;\n\n  :not(:last-child) {\n    margin-right: 12px;\n  }\n\n  :hover {\n    color: #b81a2f;\n  }\n\n  &.active {\n    color: #b81a2f;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  AddInfoLinksBox,\n  AddInfoLinksTitle,\n  StyledLink,\n} from './AddInfoLinks.styled';\n\nconst AddInfoLinks = ({ location }) => {\n  return (\n    <AddInfoLinksBox>\n      <AddInfoLinksTitle>Additional inrormation</AddInfoLinksTitle>\n      <StyledLink to=\"cast\" state={{ from: location }}>\n        Cast\n      </StyledLink>\n      <StyledLink to=\"reviews\" state={{ from: location }}>\n        Reviews\n      </StyledLink>\n    </AddInfoLinksBox>\n  );\n};\n\nAddInfoLinks.propTypes = {\n  location: PropTypes.object.isRequired,\n};\nexport default AddInfoLinks;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { fetchMovieDetails } from 'api';\nimport MovieCard from 'components/MovieCard';\nimport BackLink from 'components/BackLink';\nimport AddInfoLinks from 'components/AddInfoLinks';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function gettingMovieDetails() {\n      try {\n        setIsLoading(true);\n        const resp = await fetchMovieDetails(movieId);\n        setMovieDetails(resp);\n      } catch (error) {\n        setError('Sorry, something went wrong. Please, try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    gettingMovieDetails();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink location={backLinkHref} />\n      {movieDetails && <MovieCard movieDetails={movieDetails} />}\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      <AddInfoLinks location={backLinkHref} />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchMovieByName","name","params","api_key","query","resp","data","results","fetchTrendingMovies","fetchMovieDetails","id","fetchMovieCast","movieId","cast","fetchMovieReviews","PageTitle","styled","title","MovieCardBox","Poster","MovieScoreBox","MovieInfoBox","MovieInfoTitle","movieDetails","release_date","poster_path","vote_average","overview","genres","releaseYear","Date","getFullYear","genresArr","map","genre","join","src","alt","Title","Math","round","StyledLink","Link","location","to","AddInfoLinksBox","AddInfoLinksTitle","NavLink","state","from","useState","setMovieDetails","error","setError","isLoading","setIsLoading","useParams","backLinkHref","useLocation","useEffect","gettingMovieDetails","Suspense","fallback"],"sourceRoot":""}