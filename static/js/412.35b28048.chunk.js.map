{"version":3,"file":"static/js/412.35b28048.chunk.js","mappings":"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","sources":["api.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '2390bc0c07f3ecc54a6e60472acdfb3a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMovieByName = async (name) => {\n\tconst resp = await axios.get('search/movie', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: name\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\n\nexport const fetchTrendingMovies = async () => {\n\tconst resp = await axios.get('trending/movie/day', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\nexport const fetchMovieDetails = async (id) => {\n\tconst resp = await axios.get(`movie/${id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data;\n\t// resp.data - object\n};\n\nexport const fetchMovieCast = async (movieId) => {\n\tconst resp = await axios.get(`movie/${movieId}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.cast;\n\t// resp.data.results - array of objects\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n\tconst resp = await axios.get(`movie/${movieId}/reviews`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\treturn resp.data.results;\n\t// resp.data.results - array of objects\n};\n\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmLink = styled(Link)`\n  display: block;\n  padding: 4px;\n  font-weight: 500;\n  color: #000000;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { FilmLink } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, name, id }) => (\n        <li key={id}>\n          <FilmLink to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </FilmLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nimport { BsSearch } from 'react-icons/bs';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid #b81a2f;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: #b81a2f;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    svg {\n      transform: scale(1.5);\n    }\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const ButttonBgImg = styled(BsSearch)`\n  color: #ffffff;\n  scale: 1.3;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  ButttonBgImg,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { request } = e.target.elements;\n    if (request.value.trim() === '') {\n      return alert('Please, enter your request');\n    }\n    onSubmit(request.value);\n  };\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        name=\"request\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n      />\n      <SearchFormButton>\n        <span>\n          <ButttonBgImg />\n        </span>\n        <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n      </SearchFormButton>\n    </SearchForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchMovieByName } from 'api';\n\nimport SearchBar from 'components/SearchBar';\nimport MovieList from 'components/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieTitle = searchParams.get('request');\n\n  const handleSubmit = request => {\n    setSearchParams({ request });\n  };\n\n  useEffect(() => {\n    async function searchingMovies(movieTitle) {\n      try {\n        setIsLoading(true);\n        const searchedMovies = await fetchMovieByName(movieTitle);\n        setMovies(searchedMovies);\n      } catch (error) {\n        setError('Sorry, something went wrong. Please, try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (!movieTitle) {\n      return;\n    } else {\n      searchingMovies(movieTitle);\n    }\n  }, [movieTitle]);\n\n  return (\n    <main>\n      <SearchBar onSubmit={handleSubmit} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","fetchMovieByName","name","params","api_key","query","resp","data","results","fetchTrendingMovies","fetchMovieDetails","id","fetchMovieCast","movieId","cast","fetchMovieReviews","FilmLink","styled","Link","movies","location","useLocation","map","title","to","state","from","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","ButttonBgImg","BsSearch","onSubmit","e","preventDefault","request","target","elements","value","trim","alert","type","autoComplete","autoFocus","placeholder","useState","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movieTitle","get","useEffect","searchedMovies","searchingMovies","SearchBar","length","MovieList"],"sourceRoot":""}